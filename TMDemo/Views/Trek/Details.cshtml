@model TMDemo.Models.TrekDetailsViewModel



    <style >

    .DivClass {
        display: flex;
        justify-content: space-between; 
        gap: 16px;
        width:100%;
        padding-bottom:10px;
    }

        .DivClass > div {
            flex: 1; 
            max-width: 48%; 
        }

    .bg-custom {
        background-color: #805353; 
    }
        .trek-fee-details{
        display: flex;
        justify-content: space-between; 
        gap: 10px;
        width: 100% 
    }

    .trek-fee-details > div {
        flex: 1; 
        margin-left:10px;
    }
    .relative {
        position: relative;
    }

        .relative img {
            width: 100%;
            height: 700px;
            object-fit: cover;
        }

    .absolute {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        justify-content:center;
        align-items:center;
    }

        .absolute h1 {
            font-size: 5rem;
            text-shadow: 2px 2px 6px rgba(0, 0, 0, 0.8);
        }

    .container {
        width: 100%;
        margin: 0;
        
    }

    .flex {
        display: flex;
    }

    .justify-around {
        justify-content: space-around;
    }

    .text-center {
        text-align: center;
    }

    .text-gray-700 {
        color: #4a5568;
    }

    .text-white {
        color: #fff;
    }

    .text-2xl {
        font-size: 1.5rem;
    }

    .text-5xl {
        font-size: 3rem;
    }

    .font-bold {
        font-weight: 700;
    }

    .mt-8 {
        margin-top: 2rem;
    }

    .mt-4 {
        margin-top: 1rem;
    }

    .px-4 {
        padding-left: 1rem;
        padding-right: 1rem;
    }

    .bg-gray-200 {
        background-color: #edf2f7;
    }

    .p-4 {
        padding: 1rem;
    }

    .rounded-lg {
        border-radius: 0.5rem;
    }

    .w-1/3 {
        width: 33.333%;
    }

    .inline-block {
        display: inline-block;
    }

    .text-blue-600 {
        color: #3182ce;
    }

    .shadow {
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .grid {
        display: grid;
    }

    .grid-cols-3 {
        grid-template-columns: repeat(3, 1fr);
    }

    .gap-4 {
        gap: 1rem;
    }

    .h-48 {
        height: 12rem;
    }

    .object-cover {
        object-fit: cover;
    }

    .available-dates{
        background-color: #D9D9D9;
        padding-bottom:20px;
        padding-left:10px;
        padding-right:10px;
        border-radius:0.25rem;
        
    }
    /* Dropdown styling */
    select {
        background-color: #fff;
        border: 1px solid #d2d6dc;
        padding: 0.5rem;
        font-size: 1rem;
        color: #4a5568;
        border-radius: 0.25rem;
        width: 100%;
        box-sizing: border-box;
    }

    /* Review Section Styling */
    .bg-white {
        background-color: #fff;
    }

    .mt-4 p {
        margin: 0.5rem 0;
    }

    .refer-links{
        display:block;
    }

    .custom-serif {
        font-family: 'Times New Roman', serif; /* Use Times New Roman */
    }
</style>


<div class="relative">
    <img src="@Url.Action("GetImage", "Trek", new { trekId = Model.Trek.TrekId })" alt="@Model.Trek.Name">
    <div class="absolute inset-0 flex items-center">
        <h1 class="text-5xl text-white font-bold">@Model.Trek.Name</h1>
    </div>
</div>

<div class="container custom-serif mx-auto mt-8 pb-4 px-0">
    <!-- Trek Info -->
    <div class="flex justify-around text-center text-gray-700">
        <div>
            <i class="fas fa-calendar-alt text-2xl" style="color:orange;"></i>
            <p>@Model.Trek.DurationDays Days</p>
        </div>
        <div>
            <i class="fas fa-mountain text-2xl" style="color:saddlebrown;"></i>
            <p class="formatted-heigth"></p>
        </div>
        <div>
            <i class="fas fa-walking text-2xl" style="color:orange;"></i>
            <p>@Model.Trek.DifficultyLevel</p>
        </div>
        <div>
            <i class="fas fa-map-marker-alt text-2xl" style="color:deepskyblue"></i>
            <p>@Model.Trek.Region</p>
        </div>
    </div>
    <div class="DivClass">
        <div class="mt-8 bg-light p-2">
                <h2 class="text-2xl font-bold fs-3">Amazing Trek to @Model.Trek.Name</h2>
            <p class="mt-4 text-black fw-medium">@Model.Trek.Description</p>
        </div>
        <div class="w-1/3 bg-custom p-4 rounded-lg mt-8">
            <div class="trek-fee-details">
                <div>
                    <h2 class="text-2xl font-normal text-white mb-2">Trek Fee</h2>
                    <p class="formatted-price text-white mb-2"></p>
                </div>
                <div>
                    <h1 class="text-white">+</h1>
                </div>
                <div>
                    <p class="text-white mb-2 ml-3">5% GST</p>
                    <p class="text-white mb-2 ml-3">₹ 10 Platform Fee</p>
                </div>
            </div>
            <div>
                <a href="javascript:void(0);" class="text-white d-block" id="inclusionsExclusionsBtn">Inclusions & Exclusions</a>

                <a href="/Home/Cancellation" class="text-white d-block"> Cancellation Policy</a>
            </div>
            <div class="mt-4 pb-4">
                <div class="available-dates">
                    @if (Model.AvailabilityDates != null && Model.AvailabilityDates.Any())
                    {
                        <label class="block text-black font-bold mt-3 fs-5 fst-normal" for="dates">Available Dates</label>
                        <form method="get" action="/Booking/AddUsers">
                            <input type="hidden" name="trekId" value="@Model.Trek.TrekId" />
                            <label for="dates">Select Start Date:</label>
                            <select name="startDate" class="w-full mt-2 p-2 border border-gray-300 rounded">
                                @foreach (var monthGroup in Model.AvailabilityDates)
                                {
                                    <optgroup label="@monthGroup.Month">
                                        @foreach (var date in monthGroup.Dates)
                                        {
                                            if (date.RemainingSlots == 0)
                                            {
                                                <option value="@date.StartDate.ToString("yyyy-MM-dd")" disabled>
                                                    @date.StartDate.ToString("dd MMM") - @date.EndDate.ToString("dd MMM") (@date.RemainingSlots AVBL)
                                                </option>
                                            }
                                            else
                                            {
                                                <option value="@date.StartDate.ToString("yyyy-MM-dd")">
                                                    @date.StartDate.ToString("dd MMM") - @date.EndDate.ToString("dd MMM") (@date.RemainingSlots AVBL)
                                                </option>
                                            }
                                        }
                                    </optgroup>
                                }
                            </select>

                            <button type="submit" class="mt-2">Book</button>
                        </form>

                    }
                    else
                    {
                        <p class="text-black font-bold mt-5 fs-5 pt-3 align-content-center">No Available Dates</p>
                    }
                </div>
            </div>

        </div>
    </div>

    <a href="javascript:void(0);" class="text-xl text-blue-600 font-bold mt-4 inline-block" id="trekPlanBtn">Get your Trek Plan</a>
    <div class="mt-8">
        <h2 class="text-2xl font-bold">Trek Reviews</h2>
        @if (Model.Reviews != null && Model.Reviews.Any())
        {
            @foreach (var review in Model.Reviews)
            {
                @await Html.PartialAsync("_review", review)
            }
        }
        else
        {
            <p class="mt-4 text-gray-700">No reviews yet. Be the first to review this trek!</p>
        }

        <!-- Add Review Section -->
        @if (User.Identity.IsAuthenticated)
        {
            <div class="mt-4">
                <h3 class="text-xl font-bold">Leave a Review</h3>
                <form method="post" action="/Reviews/Add">
                    <input type="hidden" name="TrekId" value="@Model.Trek.TrekId" />
                    <textarea name="ReviewText" class="w-full p-2 border border-gray-300 rounded mt-2" rows="4" placeholder="Write your review here..."></textarea>
                    <button type="submit" class="mt-2 px-4 py-2 bg-blue-500 text-white rounded">Submit</button>
                </form>
            </div>
        }
        else
        {
            <p class="mt-4 text-gray-500">Please <a href="/Account/Login" class="text-blue-600">log in</a> to leave a review.</p>
        }
    </div>

    
    
</div>
<div class="modal fade" id="inclusionsExclusionsModal" tabindex="-1" aria-labelledby="inclusionsExclusionsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="inclusionsExclusionsModalLabel">Inclusions and Exclusions</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @Html.Partial("_InclusionExclusionPartial")
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="trekPlanModal" tabindex="-1" aria-labelledby="trekPlanModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="trekPlanModalLabel">Trek Plan</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @if (Model.TrekPlan != null && Model.TrekPlan.Any())
                {
                    <ul>
                        @for (int i = 0; i < Model.TrekPlan.Count; i++)
                        {
                            <li><strong>Day @(i + 1):</strong><br /> @Model.TrekPlan[i]</li>
                        }
                    </ul>
                }
                else
                {
                    <p>No trek plan available for this trek.</p>
                }
            </div>
        </div>
    </div>
</div>


<script>
    document.getElementById('inclusionsExclusionsBtn').addEventListener('click', function (e) {
        e.preventDefault();  
        var myModal = new bootstrap.Modal(document.getElementById('inclusionsExclusionsModal'));
        myModal.show();
    });
    document.getElementById('trekPlanBtn').addEventListener('click', function (e) {
        e.preventDefault(); 
        var trekPlanModal = new bootstrap.Modal(document.getElementById('trekPlanModal'));
        trekPlanModal.show();
    });
    var price = @Model.Trek.Price;
    var formattedPrice = '₹' + price.toLocaleString();
    document.querySelector('.formatted-price').innerHTML = formattedPrice;
    var Heigth = @Model.Trek.HighAltitude;
    var formattedHeigth = Heigth.toLocaleString() + ' ft';
    document.querySelector('.formatted-heigth').innerHTML = formattedHeigth;
</script>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>


