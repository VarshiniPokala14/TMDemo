<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - TrekMasters</title>
    <link rel="stylesheet" href="~/css/site.css">
	<link rel="stylesheet" href="~/css/register.css">
	<link href="~/css/admincss.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/trekpartial.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0/signalr.min.js"></script>


@*     <a href="~/js/signalr.js.map">~/js/signalr.js.map</a>
    <a href="~/js/signalr.min.js.map">~/js/signalr.min.js.map</a>
    <script src="~/js/signalr.min.js"></script>
    <script src="~/js/signalr.js"></script>
    <script src="~/js/site.js"></script> *@
    <style>
        .nav-links .active a {
            color: deepskyblue; 
            font-weight: bold; 
        }
    </style>

</head>

<body>
    <header class="header">
        <nav class="navbar">
            <div class="logo">
                <a href="/Admin/Treks" class="logo-link">
                    <img style="width:140px;" src="~/images/Logo1.png" />
                </a>
            </div>
            <ul class="nav-links" style="margin-top:10px;">
                <li class="@(ViewContext.RouteData.Values["controller"]?.ToString() == "Analytics" && ViewContext.RouteData.Values["action"]?.ToString() == "Dashboard" ? "active" : "")">
                    <a class="nav-link" href="@Url.Action("Dashboard", "Analytics")">Dashboard</a>
                </li>
                <li class="@(ViewContext.RouteData.Values["controller"]?.ToString() == "Admin" && ViewContext.RouteData.Values["action"]?.ToString() == "Treks" ? "active" : "")">
                    <a class="nav-link" href="@Url.Action("Treks", "Admin")">All Treks</a>
                </li>
                <li class="@(ViewContext.RouteData.Values["controller"]?.ToString() == "Admin" && ViewContext.RouteData.Values["action"]?.ToString() == "AddTrek" ? "active" : "")">
                    <a class="nav-link" href="@Url.Action("AddTrek", "Admin")">Add Trek</a>
                </li>
                <li class="@(ViewContext.RouteData.Values["controller"]?.ToString() == "Admin" && ViewContext.RouteData.Values["action"]?.ToString() == "Index" ? "active" : "")">
                    <a class="nav-link" href="@Url.Action("Index", "Admin")">Availability</a>
                </li>
@*                 @await Component.InvokeAsync("Notification")
 *@
               
                 
                @* <li class="nav-item dropdown me-3">
                    <a id="notificationsDropdown" class="nav-link" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="fas fa-bell"></i>
                        <span id="notificationsCount" class="badge bg-danger"></span>
                    </a>
                    <ul  class="dropdown-menu dropdown-menu-end">
                        <li id="notificationsList"></li>
                        <!-- Notifications will populate here -->
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" href="/Notification/Index">View All</a></li>
                    </ul>

                <li /> *@
                <li class="nav-item dropdown me-3">
                    <a id="notificationsDropdown" class="dropbtn" href="#">
                        <i class="fas fa-bell"></i>
                        <span id="notificationsCount" class="badge bg-danger"></span>
                    </a>
                    <div class="dropdown-content" style="left:50%;transform: translateX(-50%);">
                        <a id="notificationsList"></a>
                        <!-- Notifications will populate here -->
                        <a><hr class="dropdown-divider"></a>
                        <a class="dropdown-item" href="/Notification/Index">View All</a>
                    </div>

                <li />
                   
                
                    

            </ul>

            <ul class="right-section fw-bolder" style="text-decoration:none;margin-top:10px;list-style-type:none; padding-right:100px;">
                <li>
                    <div>
                        <a href="@Url.Action("Logout", "Account", new { returnUrl = Url.Action("Index", "Home") })" class="dropdown-item" style="text-decoration: none; color: #000; font-weight:bold;">Logout</a>
                    </div>
                </li>
            </ul>
        </nav>
    </header>

    
    <main>
        @RenderBody()
    </main>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>


    @await RenderSectionAsync("Scripts", required: false)
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            console.log("Admin SignalR script loaded");
            
        });
        document.addEventListener("DOMContentLoaded", function () {

            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/notificationHub")
                .build();
            try {
                connection.on("ReceiveNotification", function (message) {
                    console.log("Admin Notification received");
                    const countElem = document.getElementById("notificationsCount");
                    const currentCount = parseInt(countElem.innerText || "0");
                    countElem.innerText = currentCount + 1;

                    const list = document.getElementById("notificationsList");
                    const newItem = document.createElement("li");
                    newItem.classList.add("dropdown-item");
                    newItem.textContent = message;
                    list.prepend(newItem);
                });
            }
            catch(error) {
                console.error("SignalR Failed to fetch");
            }
            

            connection.start()
                    .then(() => console.log("Admin SignalR connection started"))
                .catch(err => console.error("Admin SignalR connection failed", err));
        });
    </script>
</body>
</html>
